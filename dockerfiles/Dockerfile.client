ARG IMAGE_PREFIX=
FROM ${IMAGE_PREFIX}debian:trixie AS builder

RUN apt-get -y update && \
  apt-get -y install \
    build-essential git-core \
    lintian pkg-config quilt patch cargo \
    nodejs node-colors node-commander \
    libudev-dev libapt-pkg-dev \
    libacl1-dev libpam0g-dev libfuse3-dev \
    libsystemd-dev uuid-dev libssl-dev \
    libclang-dev libjson-perl libcurl4-openssl-dev \
    dh-exec wget

WORKDIR /src

RUN /usr/bin/rustc --version
RUN git config --global user.email "docker@compile.dev" && \
  git config --global user.name "Docker Compile"

# Install valid rust toolchain
RUN wget https://static.rust-lang.org/rustup/rustup-init.sh && \
    chmod +x rustup-init.sh && \
    ./rustup-init.sh -y && \
    for tool in /root/.cargo/bin/*; do ln -vsf $tool /usr/bin/; done;

# Specify default rust toolchain
ENV RUSTUP_TOOLCHAIN=1.88

# Apply all patches
ADD /scripts/build /src/scripts/build
ADD /repos /src/repos

# Build
ARG CROSS_ARCH=
RUN ./scripts/build/cross-compile.bash "$CROSS_ARCH"
RUN ./scripts/build/make.bash proxmox-backup --keep "make . ignore proxmox-backup-client-static BUILD_MODE=release COMPILEDIR=target/static/release CARGO_STATIC_CONFIG="

# Bundle client
ARG VERSION
ARG ARCH=
ARG TAG=
ADD /dockerfiles/client/ /dockerfiles/client/
ADD /scripts/release /src/scripts/release
RUN /src/scripts/release/bundle-tgz.bash /proxmox-backup-client-${TAG:-${VERSION}}-${CROSS_ARCH:-${ARCH:-dev}}.tgz \
  /dockerfiles/client/. \
  /src/build/proxmox-backup/target/static-build/*/release/pxar \
  /src/build/proxmox-backup/target/static-build/*/release/proxmox-backup-client
